===================
XC off
===================

 XC OFF

---

(source_file
	(pseudo_operation (psop_xc) (arg_xc (enum))))

===================
interspersed ASC
===================

 ASC "Bye,Bye",8D,ff,"between",9E1A
 ASC "terminating hex that could be a null dstring",00,ff

---

(source_file
	(pseudo_operation (psop_asc) (arg_asc (dstring) (hex_data) (dstring) (hex_data)))
	(pseudo_operation (psop_asc) (arg_asc (dstring) (hex_data))))

===================
expression ASC
===================

 ASC #X+Y
 ASC #'X+Y
 ASC #"X+Y
 ASC #>X+Y
 ASC #'>X+Y
 ASC #'>X+Y
 INV #X+Y

---

(source_file
	(pseudo_operation (psop_asc) (arg_asc (num_str_prefix) (binary_aexpr (label_ref (global_label)) (eop_plus) (label_ref (global_label)))))
	(pseudo_operation (psop_asc) (arg_asc (num_str_prefix) (binary_aexpr (label_ref (global_label)) (eop_plus) (label_ref (global_label)))))
	(pseudo_operation (psop_asc) (arg_asc (num_str_prefix) (binary_aexpr (label_ref (global_label)) (eop_plus) (label_ref (global_label)))))
	(pseudo_operation (psop_asc) (arg_asc (num_str_prefix) (binary_aexpr (label_ref (global_label)) (eop_plus) (label_ref (global_label)))))
	(pseudo_operation (psop_asc) (arg_asc (num_str_prefix) (binary_aexpr (label_ref (global_label)) (eop_plus) (label_ref (global_label)))))
	(pseudo_operation (psop_asc) (arg_asc (num_str_prefix) (binary_aexpr (label_ref (global_label)) (eop_plus) (label_ref (global_label)))))
	(pseudo_operation (psop_inv) (arg_inv (dstring (MISSING "#")))))

===================
DATE with arg
===================

 DAT 1

---

(source_file
	(pseudo_operation (psop_dat) (arg_dat (num))))

===================
case control CAS
===================

 CAS SE
 CAS IN

---

(source_file
	(pseudo_operation (psop_cas) (arg_cas (enum)))
	(pseudo_operation (psop_cas) (arg_cas (enum))))

===================
list control LST
===================

 LST FILE,myfile

---

(source_file
	(pseudo_operation (psop_lst) (arg_lst (enum) (filename (prodos (prodos_filename))))))

===================
word length STRL
===================

 STRL "hello"

---

(source_file
	(pseudo_operation (psop_strl) (arg_strl (dstring))))

===================
floating point FLO
===================

 FLO '1.6e-19'

---

(source_file
	(pseudo_operation (psop_flo) (arg_flo (dstring))))

===================
external EXD
===================

LAB EXD
 EXD LAB1,LAB2

---

(source_file
	(pseudo_operation (label_def (global_label)) (psop_exd))
    (pseudo_operation (psop_exd) (arg_exd (label_def (global_label)) (label_def (global_label)))))

===================
Braced expressions
===================

 LDA {A+B*C}
 LDA +{A+B}*C

---

(source_file
	(operation
		(op_lda)
		(arg_lda
			(addr
				(braced_aexpr
        			(binary_aexpr
						(label_ref (global_label))
						(eop_plus)
            			(binary_aexpr
							(label_ref (global_label))
							(eop_times)
							(label_ref (global_label))
						)
					)
				)
			)
		)
	)
	(operation
		(op_lda)
		(arg_lda
			(addr
        		(binary_aexpr
            		(unary_aexpr (eop_plus)
                		(braced_aexpr
							(binary_aexpr
								(label_ref (global_label))
								(eop_plus)
								(label_ref (global_label))
							)
						)
					)
            		(eop_times)
            		(label_ref (global_label))
				)
			)
		)
	)
)

===================
Comparison operators
===================

 LDA X<Y

---

(source_file
	(operation (op_lda)
		(arg_lda
			(addr
        		(binary_aexpr
					(label_ref (global_label))
					(cop_less)
					(label_ref (global_label))
				)
			)
		)
	)
)
