// `script/gammar-src.js` is for human editing
// `grammar.js` is generated by `opcode_processor.py`

// Downstream tools must resolve the following:
// * matching start and end of macro
// * limitations on use of local labels
// * limitations of 6502 and 65C02
// * limitations of Merlin 8
// * identifying implied macro calls that overlap with (pseudo)opcode mnemonics
// * verify that literal addresses or offsets are valid, e.g., lda -1 is accepted by the parser

// Known differences with legacy Merlin syntax:
// Here semicolons are unconditionally forbidden in labels
// Here square brackets are forbidden in labels, except for start the start of variable token
// dstrings must always be terminated

// Do not set this flag manually, let `build.py` handle it
const allow_lower_case = true;
const language_name = allow_lower_case ? 'merlin6502' : 'merlin6502casesens';
const alphachars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
const prodoschars = '.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';

// Define constants

const ANYCHAR = /[ !"#$%&'()*+,\-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\\\]\^_`abcdefghijklmnopqrstuvwxyz{|}~]/;
const ANYFS = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
const NCHAR = /[ !#$%&'()*+,\-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\\\]\^_`abcdefghijklmnopqrstuvwxyz{|}~]/;
const PCHAR = /[ !"#$%&()*+,\-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\\\]\^_`abcdefghijklmnopqrstuvwxyz{|}~]/;
const SPCHAR = /[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]\^_`{|}~]/;
const ARG = "!\"#$%&'()*+,-./0123456789:<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
const GLOB_LAB_BEG = /[<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\^_`abcdefghijklmnopqrstuvwxyz{|}~]/;
const LAB_CHAR = /[0123456789:<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\^_`abcdefghijklmnopqrstuvwxyz{|}~]/;
const DOS33_CHARS = " !\"#$%&'()*+-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
const DOS33_TFLAG = "!\"#$%&'()*+,-./0123456789:;<=>?";


// Tree-sitter grammar definition

module.exports = grammar({
	name: language_name,
	extras: $ => [],
	conflicts: $ => [
		[$.literal_arg,$.eop_minus],
		[$.literal_arg,$.mode_iopen],
		[$.literal_arg,$.imm_prefix],
		[$.literal_arg,$.current_addr],
		[$.literal_arg,$.eop_plus],
		[$.literal_arg,$.mode_dopen],
		[$.literal_arg,$.decimal],
		[$.literal_arg,$.hexadecimal],
		[$.literal_arg,$.binary],
		[$.literal_arg,$.addr_prefix],
		[$.prodos_filename,$.dos33,$.anyfs],
		[$.prodos_filename,$.dos33],
		[$.dos33,$.anyfs]
	],

	rules: {
		source_file: $ => repeat($._factor),
		_factor: $ => choice(
			$.program_counter,
			seq($.main_comment,$._newline), // vscode highlights don't like newline included in the highlight
			$.macro_call,
			$.macro_call_forced, // downstream must activate this in line by line parsing
			$.operation,
			$.pseudo_operation, // excludes macro pseudo-ops
			$._newline
		),
		program_counter: $ => seq($.label_def,optional(seq($._sep,$.comment)),$._newline), // set label to program counter

		// Macros and labels
		macro_call: $ => seq(optional($.label_def),$._sep,$.global_label,optional(seq($._sep,$.macro_args)),optional(seq($._sep,$.comment)),$._newline),
		macro_call_forced: $ => seq('\u0100',optional($.label_def),$._sep,$.global_label,optional(seq($._sep,$.macro_args)),optional(seq($._sep,$.comment)),$._newline),

		_newline: $ => seq(optional($._sep),/\r?\n/),
		_sep: $ => /[ \t]+/,
		_arg_sep: $ => choice('.',',','/','-','(',' '), // separates macro call from arguments in the long form, e.g., PMC mymacro,myargs

		_label: $ => choice($.global_label,$.local_label,$.var_label),
		label_def: $ => choice($.global_label,$.local_label,$.var_label),
		global_label: $ => token(seq(GLOB_LAB_BEG,repeat(LAB_CHAR))), // max 13 (8bit) or 26 (16bit)
		local_label: $ => token(seq(':',repeat1(LAB_CHAR))), // max 13 (8bit) or 26 (16bit),cannot be first label in program,in macro,MAC,ENT,EXT, or EQU
		var_label: $ => token(seq(']',repeat1(LAB_CHAR))),

		macro_args: $ => seq($._arg,repeat(seq(';',$._arg))),
		_arg: $ => choice(
			$._addr_6502,
			$._addr_65816,
			$.literal_arg,
		),
		literal_arg: $ => prec.dynamic(-9,repeat1(choice(...ARG))),

		// Operations

		op_adc: $ => seq(token(prec(1,choice('adc','ADC'))),optional($.trailing)),
		op_and: $ => seq(token(prec(1,choice('and','AND'))),optional($.trailing)),
		op_asl: $ => seq(token(prec(1,choice('ASL','asl'))),optional($.trailing)),
		op_bcc: $ => seq(token(prec(1,choice('blt','bcc','BCC','BLT'))),optional($.trailing)),
		op_bcs: $ => seq(token(prec(1,choice('BGE','bcs','BCS','bge'))),optional($.trailing)),
		op_beq: $ => seq(token(prec(1,choice('BEQ','beq'))),optional($.trailing)),
		op_bit: $ => seq(token(prec(1,choice('BIT','bit'))),optional($.trailing)),
		op_bmi: $ => seq(token(prec(1,choice('bmi','BMI'))),optional($.trailing)),
		op_bne: $ => seq(token(prec(1,choice('BNE','bne'))),optional($.trailing)),
		op_bpl: $ => seq(token(prec(1,choice('bpl','BPL'))),optional($.trailing)),
		op_bra: $ => seq(token(prec(1,choice('BRA','bra'))),optional($.trailing)),
		op_brk: $ => seq(token(prec(1,choice('brk','BRK'))),optional($.trailing)),
		op_bvc: $ => seq(token(prec(1,choice('BVC','bvc'))),optional($.trailing)),
		op_bvs: $ => seq(token(prec(1,choice('BVS','bvs'))),optional($.trailing)),
		op_clc: $ => seq(token(prec(1,choice('clc','CLC'))),optional($.trailing)),
		op_cld: $ => seq(token(prec(1,choice('cld','CLD'))),optional($.trailing)),
		op_cli: $ => seq(token(prec(1,choice('CLI','cli'))),optional($.trailing)),
		op_clv: $ => seq(token(prec(1,choice('clv','CLV'))),optional($.trailing)),
		op_cmp: $ => seq(token(prec(1,choice('cmp','CMP'))),optional($.trailing)),
		op_cpx: $ => seq(token(prec(1,choice('cpx','CPX'))),optional($.trailing)),
		op_cpy: $ => seq(token(prec(1,choice('cpy','CPY'))),optional($.trailing)),
		op_dec: $ => seq(token(prec(1,choice('DEC','dec'))),optional($.trailing)),
		op_dex: $ => seq(token(prec(1,choice('dex','DEX'))),optional($.trailing)),
		op_dey: $ => seq(token(prec(1,choice('dey','DEY'))),optional($.trailing)),
		op_eor: $ => seq(token(prec(1,choice('EOR','eor'))),optional($.trailing)),
		op_inc: $ => seq(token(prec(1,choice('inc','INC'))),optional($.trailing)),
		op_inx: $ => seq(token(prec(1,choice('INX','inx'))),optional($.trailing)),
		op_iny: $ => seq(token(prec(1,choice('INY','iny'))),optional($.trailing)),
		op_jmp: $ => seq(token(prec(1,choice('jmp','JMP'))),optional($.trailing)),
		op_jsr: $ => seq(token(prec(1,choice('jsr','JSR'))),optional($.trailing)),
		op_lda: $ => seq(token(prec(1,choice('LDA','lda'))),optional($.trailing)),
		op_ldx: $ => seq(token(prec(1,choice('ldx','LDX'))),optional($.trailing)),
		op_ldy: $ => seq(token(prec(1,choice('ldy','LDY'))),optional($.trailing)),
		op_lsr: $ => seq(token(prec(1,choice('lsr','LSR'))),optional($.trailing)),
		op_nop: $ => seq(token(prec(1,choice('NOP','nop'))),optional($.trailing)),
		op_ora: $ => seq(token(prec(1,choice('ora','ORA'))),optional($.trailing)),
		op_pha: $ => seq(token(prec(1,choice('PHA','pha'))),optional($.trailing)),
		op_php: $ => seq(token(prec(1,choice('PHP','php'))),optional($.trailing)),
		op_phx: $ => seq(token(prec(1,choice('PHX','phx'))),optional($.trailing)),
		op_phy: $ => seq(token(prec(1,choice('PHY','phy'))),optional($.trailing)),
		op_pla: $ => seq(token(prec(1,choice('PLA','pla'))),optional($.trailing)),
		op_plp: $ => seq(token(prec(1,choice('PLP','plp'))),optional($.trailing)),
		op_plx: $ => seq(token(prec(1,choice('plx','PLX'))),optional($.trailing)),
		op_ply: $ => seq(token(prec(1,choice('ply','PLY'))),optional($.trailing)),
		op_rol: $ => seq(token(prec(1,choice('ROL','rol'))),optional($.trailing)),
		op_ror: $ => seq(token(prec(1,choice('ROR','ror'))),optional($.trailing)),
		op_rti: $ => seq(token(prec(1,choice('RTI','rti'))),optional($.trailing)),
		op_rts: $ => seq(token(prec(1,choice('RTS','rts'))),optional($.trailing)),
		op_sbc: $ => seq(token(prec(1,choice('sbc','SBC'))),optional($.trailing)),
		op_sec: $ => seq(token(prec(1,choice('SEC','sec'))),optional($.trailing)),
		op_sed: $ => seq(token(prec(1,choice('SED','sed'))),optional($.trailing)),
		op_sei: $ => seq(token(prec(1,choice('sei','SEI'))),optional($.trailing)),
		op_sta: $ => seq(token(prec(1,choice('sta','STA'))),optional($.trailing)),
		op_stx: $ => seq(token(prec(1,choice('STX','stx'))),optional($.trailing)),
		op_sty: $ => seq(token(prec(1,choice('sty','STY'))),optional($.trailing)),
		op_stz: $ => seq(token(prec(1,choice('STZ','stz'))),optional($.trailing)),
		op_tax: $ => seq(token(prec(1,choice('TAX','tax'))),optional($.trailing)),
		op_tay: $ => seq(token(prec(1,choice('TAY','tay'))),optional($.trailing)),
		op_trb: $ => seq(token(prec(1,choice('TRB','trb'))),optional($.trailing)),
		op_tsb: $ => seq(token(prec(1,choice('tsb','TSB'))),optional($.trailing)),
		op_tsx: $ => seq(token(prec(1,choice('tsx','TSX'))),optional($.trailing)),
		op_txa: $ => seq(token(prec(1,choice('TXA','txa'))),optional($.trailing)),
		op_txs: $ => seq(token(prec(1,choice('TXS','txs'))),optional($.trailing)),
		op_tya: $ => seq(token(prec(1,choice('TYA','tya'))),optional($.trailing)),
		op_brl: $ => seq(token(prec(1,choice('BRL','brl'))),optional($.trailing)),
		op_cop: $ => seq(token(prec(1,choice('COP','cop'))),optional($.trailing)),
		op_jml: $ => seq(token(prec(1,choice('JML','jml'))),optional($.trailing)),
		op_jsl: $ => seq(token(prec(1,choice('jsl','JSL'))),optional($.trailing)),
		op_mvn: $ => seq(token(prec(1,choice('MVN','mvn'))),optional($.trailing)),
		op_mvp: $ => seq(token(prec(1,choice('mvp','MVP'))),optional($.trailing)),
		op_pea: $ => seq(token(prec(1,choice('PEA','pea'))),optional($.trailing)),
		op_pei: $ => seq(token(prec(1,choice('pei','PEI'))),optional($.trailing)),
		op_per: $ => seq(token(prec(1,choice('per','PER'))),optional($.trailing)),
		op_phb: $ => seq(token(prec(1,choice('phb','PHB'))),optional($.trailing)),
		op_phd: $ => seq(token(prec(1,choice('PHD','phd'))),optional($.trailing)),
		op_phk: $ => seq(token(prec(1,choice('PHK','phk'))),optional($.trailing)),
		op_plb: $ => seq(token(prec(1,choice('PLB','plb'))),optional($.trailing)),
		op_pld: $ => seq(token(prec(1,choice('pld','PLD'))),optional($.trailing)),
		op_rep: $ => seq(token(prec(1,choice('rep','REP'))),optional($.trailing)),
		op_rtl: $ => seq(token(prec(1,choice('RTL','rtl'))),optional($.trailing)),
		op_sep: $ => seq(token(prec(1,choice('sep','SEP'))),optional($.trailing)),
		op_tcd: $ => seq(token(prec(1,choice('tad','tcd','TAD','TCD'))),optional($.trailing)),
		op_tcs: $ => seq(token(prec(1,choice('tcs','TAS','TCS','tas'))),optional($.trailing)),
		op_tdc: $ => seq(token(prec(1,choice('tda','TDA','tdc','TDC'))),optional($.trailing)),
		op_tsc: $ => seq(token(prec(1,choice('tsc','TSC','TSA','tsa'))),optional($.trailing)),
		op_txy: $ => seq(token(prec(1,choice('txy','TXY'))),optional($.trailing)),
		op_tyx: $ => seq(token(prec(1,choice('tyx','TYX'))),optional($.trailing)),
		op_wai: $ => seq(token(prec(1,choice('wai','WAI'))),optional($.trailing)),
		op_wdm: $ => seq(token(prec(1,choice('WDM','wdm'))),optional($.trailing)),
		op_xba: $ => seq(token(prec(1,choice('swa','xba','XBA','SWA'))),optional($.trailing)),
		op_xce: $ => seq(token(prec(1,choice('xce','XCE'))),optional($.trailing)),
		operation: $ => choice(
			seq(optional($.label_def), $._sep, $.op_adc, $._sep, choice($.iaddr_y,$.iaddr,$.imm,$.addr_s,$.daddr_y,$.addr_x,$.addr,$.addr_y,$.daddr,$.iaddr_is_y,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_and, $._sep, choice($.iaddr_y,$.iaddr,$.imm,$.addr_s,$.daddr_y,$.addr_x,$.addr,$.addr_y,$.daddr,$.iaddr_is_y,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_asl, optional(seq($._sep,choice($.addr_x,$.addr))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_bcc, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_bcs, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_beq, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_bit, $._sep, choice($.imm,$.addr,$.addr_x), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_bmi, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_bne, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_bpl, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_bra, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_brk, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_bvc, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_bvs, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_clc, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_cld, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_cli, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_clv, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_cmp, $._sep, choice($.iaddr_y,$.iaddr,$.imm,$.addr_s,$.daddr_y,$.addr_x,$.addr,$.addr_y,$.daddr,$.iaddr_is_y,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_cpx, $._sep, choice($.imm,$.addr), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_cpy, $._sep, choice($.imm,$.addr), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_dec, optional(seq($._sep,choice($.addr_x,$.addr))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_dex, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_dey, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_eor, $._sep, choice($.iaddr_y,$.iaddr,$.imm,$.addr_s,$.daddr_y,$.addr_x,$.addr,$.addr_y,$.daddr,$.iaddr_is_y,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_inc, optional(seq($._sep,choice($.addr_x,$.addr))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_inx, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_iny, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_jmp, $._sep, choice($.iaddr,$.addr,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_jsr, $._sep, choice($.addr,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_lda, $._sep, choice($.iaddr_y,$.iaddr,$.imm,$.addr_s,$.daddr_y,$.addr_x,$.addr,$.addr_y,$.daddr,$.iaddr_is_y,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_ldx, $._sep, choice($.imm,$.addr,$.addr_y), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_ldy, $._sep, choice($.imm,$.addr,$.addr_x), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_lsr, optional(seq($._sep,choice($.addr_x,$.addr))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_nop, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_ora, $._sep, choice($.iaddr_y,$.iaddr,$.imm,$.addr_s,$.daddr_y,$.addr_x,$.addr,$.addr_y,$.daddr,$.iaddr_is_y,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_pha, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_php, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_phx, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_phy, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_pla, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_plp, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_plx, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_ply, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_rol, optional(seq($._sep,choice($.addr_x,$.addr))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_ror, optional(seq($._sep,choice($.addr_x,$.addr))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_rti, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_rts, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_sbc, $._sep, choice($.iaddr_y,$.iaddr,$.imm,$.addr_s,$.daddr_y,$.addr_x,$.addr,$.addr_y,$.daddr,$.iaddr_is_y,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_sec, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_sed, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_sei, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_sta, $._sep, choice($.iaddr_y,$.iaddr,$.addr_s,$.daddr_y,$.addr_x,$.addr,$.addr_y,$.daddr,$.iaddr_is_y,$.iaddr_ix), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_stx, $._sep, choice($.addr_y,$.addr), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_sty, $._sep, choice($.addr_x,$.addr), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_stz, $._sep, choice($.addr_x,$.addr), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tax, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tay, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_trb, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tsb, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tsx, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_txa, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_txs, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tya, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_brl, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_cop, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_jml, $._sep, $.iaddr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_jsl, $._sep, $.addr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_mvn, $._sep, $.xyc, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_mvp, $._sep, $.xyc, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_pea, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_pei, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_per, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_phb, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_phd, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_phk, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_plb, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_pld, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_rep, $._sep, $.imm, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_rtl, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_sep, $._sep, $.imm, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tcd, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tcs, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tdc, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tsc, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_txy, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_tyx, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_wai, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_wdm, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_xba, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.op_xce, optional(seq($._sep,$.comment)), $._newline)
		),


		// Pseudo-operations

		psop_equ: $ => seq(token(prec(1,choice('EQU','=','equ'))),optional($.trailing)),
		psop_ext: $ => seq(token(prec(1,choice('EXT','ext'))),optional($.trailing)),
		psop_ent: $ => seq(token(prec(1,choice('ENT','ent'))),optional($.trailing)),
		psop_org: $ => seq(token(prec(1,choice('ORG','org'))),optional($.trailing)),
		psop_rel: $ => seq(token(prec(1,choice('rel','REL'))),optional($.trailing)),
		psop_obj: $ => seq(token(prec(1,choice('obj','OBJ'))),optional($.trailing)),
		psop_put: $ => seq(token(prec(1,choice('PUT','put'))),optional($.trailing)),
		psop_use: $ => seq(token(prec(1,choice('USE','use'))),optional($.trailing)),
		psop_var: $ => seq(token(prec(1,choice('VAR','var'))),optional($.trailing)),
		psop_sav: $ => seq(token(prec(1,choice('SAV','sav'))),optional($.trailing)),
		psop_typ: $ => seq(token(prec(1,choice('TYP','typ'))),optional($.trailing)),
		psop_dsk: $ => seq(token(prec(1,choice('DSK','dsk'))),optional($.trailing)),
		psop_end: $ => seq(token(prec(1,choice('END','end'))),optional($.trailing)),
		psop_dum: $ => seq(token(prec(1,choice('dum','DUM'))),optional($.trailing)),
		psop_dend: $ => seq(token(prec(1,choice('DEND','dend'))),optional($.trailing)),
		psop_ast: $ => seq(token(prec(1,choice('ast','AST'))),optional($.trailing)),
		psop_cyc: $ => seq(token(prec(1,choice('CYC','cyc'))),optional($.trailing)),
		psop_dat: $ => seq(token(prec(1,choice('dat','DAT'))),optional($.trailing)),
		psop_exp: $ => seq(token(prec(1,choice('exp','EXP'))),optional($.trailing)),
		psop_lst: $ => seq(token(prec(1,choice('LST','lst'))),optional($.trailing)),
		psop_lstdo: $ => seq(token(prec(1,choice('LSTDO','lstdo'))),optional($.trailing)),
		psop_pag: $ => seq(token(prec(1,choice('pag','PAG'))),optional($.trailing)),
		psop_ttl: $ => seq(token(prec(1,choice('TTL','ttl'))),optional($.trailing)),
		psop_skp: $ => seq(token(prec(1,choice('skp','SKP'))),optional($.trailing)),
		psop_tr: $ => seq(token(prec(1,choice('tr','TR'))),optional($.trailing)),
		psop_asc: $ => seq(token(prec(1,choice('asc','ASC'))),optional($.trailing)),
		psop_dci: $ => seq(token(prec(1,choice('DCI','dci'))),optional($.trailing)),
		psop_inv: $ => seq(token(prec(1,choice('INV','inv'))),optional($.trailing)),
		psop_fls: $ => seq(token(prec(1,choice('FLS','fls'))),optional($.trailing)),
		psop_rev: $ => seq(token(prec(1,choice('rev','REV'))),optional($.trailing)),
		psop_str: $ => seq(token(prec(1,choice('str','STR'))),optional($.trailing)),
		psop_da: $ => seq(token(prec(1,choice('DA','da','dw','DW'))),optional($.trailing)),
		psop_ddb: $ => seq(token(prec(1,choice('DDB','ddb'))),optional($.trailing)),
		psop_dfb: $ => seq(token(prec(1,choice('DB','DFB','db','dfb'))),optional($.trailing)),
		psop_adr: $ => seq(token(prec(1,choice('adr','ADR'))),optional($.trailing)),
		psop_adrl: $ => seq(token(prec(1,choice('adrl','ADRL'))),optional($.trailing)),
		psop_hex: $ => seq(token(prec(1,choice('HEX','hex'))),optional($.trailing)),
		psop_ds: $ => seq(token(prec(1,choice('ds','DS'))),optional($.trailing)),
		psop_do: $ => seq(token(prec(1,choice('DO','do'))),optional($.trailing)),
		psop_else: $ => seq(token(prec(1,choice('else','ELSE'))),optional($.trailing)),
		psop_if: $ => seq(token(prec(1,choice('IF','if'))),optional($.trailing)),
		psop_fin: $ => seq(token(prec(1,choice('FIN','fin'))),optional($.trailing)),
		psop_chk: $ => seq(token(prec(1,choice('CHK','chk'))),optional($.trailing)),
		psop_err: $ => seq(token(prec(1,choice('ERR','err'))),optional($.trailing)),
		psop_kbd: $ => seq(token(prec(1,choice('KBD','kbd'))),optional($.trailing)),
		psop_lup: $ => seq(token(prec(1,choice('LUP','lup'))),optional($.trailing)),
		psop_end_lup: $ => seq(token(prec(1,'--^')),optional($.trailing)),
		psop_mx: $ => seq(token(prec(1,choice('mx','MX'))),optional($.trailing)),
		psop_pau: $ => seq(token(prec(1,choice('PAU','pau'))),optional($.trailing)),
		psop_sw: $ => seq(token(prec(1,choice('SW','sw'))),optional($.trailing)),
		psop_usr: $ => seq(token(prec(1,choice('usr','USR'))),optional($.trailing)),
		psop_xc: $ => seq(token(prec(1,choice('xc','XC'))),optional($.trailing)),
		psop_mac: $ => seq(token(prec(1,choice('MAC','mac'))),optional($.trailing)),
		psop_eom: $ => seq(token(prec(1,choice('<<<','eom','EOM'))),optional($.trailing)),
		psop_pmc: $ => seq(token(prec(1,choice('pmc','>>>','PMC'))),optional($.trailing)),
		pseudo_operation: $ => choice(
			seq(optional($.label_def), $._sep, $.psop_equ, $._sep, $._aexpr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_ext, optional(seq($._sep,seq($._label,repeat(seq(',',$._label))))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_ent, optional(seq($._sep,seq($._label,repeat(seq(',',$._label))))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_org, optional(seq($._sep,$._aexpr)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_rel, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_obj, $._sep, $._aexpr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_put, $._sep, $.filename, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_use, $._sep, $.filename, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_var, $._sep, $._aexpr,repeat(seq(';',$._aexpr)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_sav, $._sep, $.filename, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_typ, $._sep, $._aexpr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_dsk, $._sep, $.filename, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_end, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_dum, $._sep, $._aexpr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_dend, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_ast, $._sep, $._aexpr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_cyc, optional(seq($._sep,choice('OFF','AVE','FLAGS'))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_dat, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_exp, $._sep, choice('ON','OFF','ONLY'), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_lst, optional(seq($._sep,choice('ON','OFF','RTN'))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_lstdo, optional(seq($._sep,'OFF')), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_pag, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_ttl, $._sep, $.dstring, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_skp, $._sep, $._aexpr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_tr, optional(seq($._sep,choice('ON','OFF','ADR'))), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_asc, $._sep, $._string_operand, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_dci, $._sep, $._string_operand, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_inv, $._sep, $._string_operand, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_fls, $._sep, $._string_operand, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_rev, $._sep, $.dstring, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_str, $._sep, $._string_operand, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_da, $._sep, $._aexpr,repeat(seq(',',$._aexpr)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_ddb, $._sep, $._aexpr,repeat(seq(',',$._aexpr)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_dfb, $._sep, $._data_aexpr,repeat(seq(',',$._data_aexpr)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_adr, $._sep, $._aexpr,repeat(seq(',',$._aexpr)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_adrl, $._sep, $._aexpr,repeat(seq(',',$._aexpr)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_hex, $._sep, $.hex_data, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_ds, $._sep, choice($._aexpr,seq($._aexpr,',',$._aexpr),'\\',seq('\\',',',$._aexpr)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_do, $._sep, $._aexpr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_else, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_if, $._sep, choice($.if_char,$.if_mx), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_fin, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_chk, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_err, $._sep, choice($.ptr_check,seq(optional('\\'),$._aexpr)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_kbd, optional(seq($._sep,$.dstring)), optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_lup, $._sep, $._aexpr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_end_lup, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_mx, $._sep, $._aexpr, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_pau, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_sw, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_usr, $._sep, $.literal, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_xc, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_mac, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_eom, optional(seq($._sep,$.comment)), $._newline),
			seq(optional($.label_def), $._sep, $.psop_pmc, $._sep, $.global_label,optional(seq($._arg_sep,$.macro_args)), optional(seq($._sep,$.comment)), $._newline)
		),


		// special arguments

		trailing: $ => /\S+/,
		if_mx: $ => seq('MX',choice($.eop_plus,$.eop_minus,$.eop_times,$.eop_div,$.eop_or,$.eop_and,$.eop_xor),$._aexpr),
		if_char: $ => seq(ANYCHAR,ANYCHAR,$.var_label),
		data_prefix: $ => choice('#','#<','#>','<','>'),
		ptr_check: $ => seq('(',$.number,')-',$.number),

		// If downstream finds a forward referenced macro call, it can insert ASCII NULL and re-parse the line
		// to see if it can be interpreted as a forced absolute operation, such as `LDAL $00`

		// Forced-operations DO NOT EDIT

		// Strings

		_string_operand: $ => seq($.dstring,optional(seq(',',$.hex_data))),

		// dstring

		dstring: $ => choice(
			seq("!",repeat(ANYCHAR),"!"),
			seq('"',repeat(ANYCHAR),'"'),
			seq("#",repeat(ANYCHAR),"#"),
			seq("$",repeat(ANYCHAR),"$"),
			seq("%",repeat(ANYCHAR),"%"),
			seq("&",repeat(ANYCHAR),"&"),
			seq("'",repeat(ANYCHAR),"'"),
			seq("(",repeat(ANYCHAR),"("),
			seq(")",repeat(ANYCHAR),")"),
			seq("*",repeat(ANYCHAR),"*"),
			seq("+",repeat(ANYCHAR),"+"),
			seq("-",repeat(ANYCHAR),"-"),
			seq(".",repeat(ANYCHAR),"."),
			seq(":",repeat(ANYCHAR),":"),
			seq(";",repeat(ANYCHAR),";"),
			seq("<",repeat(ANYCHAR),"<"),
			seq("=",repeat(ANYCHAR),"="),
			seq(">",repeat(ANYCHAR),">"),
			seq("?",repeat(ANYCHAR),"?"),
			seq("@",repeat(ANYCHAR),"@"),
			seq("A",repeat(ANYCHAR),"A"),
			seq("B",repeat(ANYCHAR),"B"),
			seq("C",repeat(ANYCHAR),"C"),
			seq("D",repeat(ANYCHAR),"D"),
			seq("E",repeat(ANYCHAR),"E"),
			seq("F",repeat(ANYCHAR),"F"),
			seq("G",repeat(ANYCHAR),"G"),
			seq("H",repeat(ANYCHAR),"H"),
			seq("I",repeat(ANYCHAR),"I"),
			seq("J",repeat(ANYCHAR),"J"),
			seq("K",repeat(ANYCHAR),"K"),
			seq("L",repeat(ANYCHAR),"L"),
			seq("M",repeat(ANYCHAR),"M"),
			seq("N",repeat(ANYCHAR),"N"),
			seq("O",repeat(ANYCHAR),"O"),
			seq("P",repeat(ANYCHAR),"P"),
			seq("Q",repeat(ANYCHAR),"Q"),
			seq("R",repeat(ANYCHAR),"R"),
			seq("S",repeat(ANYCHAR),"S"),
			seq("T",repeat(ANYCHAR),"T"),
			seq("U",repeat(ANYCHAR),"U"),
			seq("V",repeat(ANYCHAR),"V"),
			seq("W",repeat(ANYCHAR),"W"),
			seq("X",repeat(ANYCHAR),"X"),
			seq("Y",repeat(ANYCHAR),"Y"),
			seq("Z",repeat(ANYCHAR),"Z"),
			seq("[",repeat(ANYCHAR),"["),
			seq('\\',repeat(ANYCHAR),'\\'),
			seq("]",repeat(ANYCHAR),"]"),
			seq("^",repeat(ANYCHAR),"^"),
			seq("_",repeat(ANYCHAR),"_"),
			seq("`",repeat(ANYCHAR),"`"),
			seq("a",repeat(ANYCHAR),"a"),
			seq("b",repeat(ANYCHAR),"b"),
			seq("c",repeat(ANYCHAR),"c"),
			seq("d",repeat(ANYCHAR),"d"),
			seq("e",repeat(ANYCHAR),"e"),
			seq("f",repeat(ANYCHAR),"f"),
			seq("g",repeat(ANYCHAR),"g"),
			seq("h",repeat(ANYCHAR),"h"),
			seq("i",repeat(ANYCHAR),"i"),
			seq("j",repeat(ANYCHAR),"j"),
			seq("k",repeat(ANYCHAR),"k"),
			seq("l",repeat(ANYCHAR),"l"),
			seq("m",repeat(ANYCHAR),"m"),
			seq("n",repeat(ANYCHAR),"n"),
			seq("o",repeat(ANYCHAR),"o"),
			seq("p",repeat(ANYCHAR),"p"),
			seq("q",repeat(ANYCHAR),"q"),
			seq("r",repeat(ANYCHAR),"r"),
			seq("s",repeat(ANYCHAR),"s"),
			seq("t",repeat(ANYCHAR),"t"),
			seq("u",repeat(ANYCHAR),"u"),
			seq("v",repeat(ANYCHAR),"v"),
			seq("w",repeat(ANYCHAR),"w"),
			seq("x",repeat(ANYCHAR),"x"),
			seq("y",repeat(ANYCHAR),"y"),
			seq("z",repeat(ANYCHAR),"z"),
			seq("{",repeat(ANYCHAR),"{"),
			seq("|",repeat(ANYCHAR),"|"),
			seq("}",repeat(ANYCHAR),"}"),
			seq("~",repeat(ANYCHAR),"~"),
		),


		// 65C02 addressing Modes
	
		_addr_6502: $ => choice($.imm,$.addr,$.addr_x,$.addr_y,$.iaddr_ix,$.iaddr_y,$.iaddr),
		imm: $ => seq($.imm_prefix,$._aexpr),
		addr: $ => $._addr_aexpr,
		addr_x: $ => seq($._addr_aexpr,$.mode_x),
		addr_y: $ => seq($._addr_aexpr,$.mode_y),
		iaddr_ix: $ => seq($.mode_iopen,$._aexpr,$.mode_iix),
		iaddr_y: $ => seq($.mode_iopen,$._aexpr,$.mode_iy),
		iaddr: $ => seq($.mode_iopen,$._aexpr,$.mode_iclose),
		mode_x: $ => allow_lower_case ? choice(',X',',x') : ',X',
		mode_y: $ => allow_lower_case ? choice(',Y',',y') : ',Y',
		mode_iopen: $ => '(',
		mode_iclose: $ => ')',
		mode_iix: $ => allow_lower_case ? choice(',X)',',x)') : ',X)',
		mode_iy: $ => allow_lower_case ? choice('),Y','),y') : '),Y',

		// 65C816 addressing modes

		_addr_65816: $ => choice($.daddr,$.daddr_y,$.addr_s,$.iaddr_is_y,$.xyc),
		daddr: $ => seq($.mode_dopen,$._aexpr,$.mode_dclose),
		daddr_y: $ => seq($.mode_dopen,$._aexpr,$.mode_dy),
		addr_s: $ => seq($._aexpr,$.mode_s),
		iaddr_is_y: $ => seq($.mode_iopen,$._aexpr,$.mode_is_y),
		xyc: $ => seq($._aexpr,',',$._aexpr),
		mode_dopen: $ => '[',
		mode_dclose: $ => ']',
		mode_dy: $ => allow_lower_case ? choice('],Y','],y') : '],Y',
		mode_s: $ => allow_lower_case ? choice(',S',',s') : ',S',
		mode_is_y: $ => allow_lower_case ? choice(',S),Y',',s),y') : ',S),Y',


		// Expressions

		_data_aexpr: $ => seq(optional($.data_prefix),$._aexpr),
		_addr_aexpr: $ => seq(optional($.addr_prefix),$._aexpr),
		_aexpr: $ => choice(
			$._label,
			$.number,
			$.pchar,
			$.nchar,
			$.current_addr,
			$.unary_aexpr,
			$.binary_aexpr
		),
		unary_aexpr: $ => prec(1,choice(seq($.eop_plus,$._aexpr),seq($.eop_minus,$._aexpr))),
		// MERLIN has no operator precedence: left to right always prevails
		binary_aexpr: $ => prec.left(seq($._aexpr,choice(
			$.eop_plus,$.eop_minus,$.eop_times,$.eop_div,$.eop_or,$.eop_and,$.eop_xor
		),$._aexpr)),

		eop_plus: $ => '+',
		eop_minus: $ => '-',
		eop_times: $ => '*',
		eop_div: $ => '/',
		eop_or: $ => '.',
		eop_and: $ => '&',
		eop_xor: $ => '!',

		// Primitive Expressions

		imm_prefix: $ => choice('#','#<','#>','#^'),
		addr_prefix: $ => choice('<','>','^','|'),
		hex_byte: $ => /[0-9A-Fa-f][0-9A-Fa-f]/,
		hex_data: $ => seq($.hex_byte,repeat(seq(optional(','),$.hex_byte))),
		filename: $ => choice($.prodos,$.dos33,$.anyfs),
		prodos: $ => seq(optional('/'),repeat(seq($.prodos_filename,'/')),$.prodos_filename),
		prodos_filename: $ => prec.dynamic(1,seq(choice(...alphachars),repeat(choice(...prodoschars)))),
		dos33: $ => seq(optional(choice(...DOS33_TFLAG)),choice(...alphachars),repeat(choice(...DOS33_CHARS)),
			optional(/,S[1-7]/),
			optional(/,D[1-2]/)),
		anyfs: $ => prec.dynamic(1,choice(seq("'",repeat1(choice(...ANYFS)),"'"), seq('"',repeat1(choice(...ANYFS)),'"'))),

		number: $ => choice($.decimal,$.hexadecimal,$.binary),
		decimal: $ => repeat1(choice(...'0123456789')),
		hexadecimal: $ => seq('$',repeat1(choice(...'0123456789ABCDEFabcdef'))),
		binary: $ => seq('%',repeat1(choice(...'01_'))),

		pchar: $ => seq("'",PCHAR,optional("'")),
		nchar: $ => seq('"',NCHAR,optional('"')),

		current_addr: $ => '*',

		literal: $ => /.*/,

		// Comments

		comment: $ => seq(';',$.comment_text), // max 64 - len(operand)
		main_comment: $ => seq('*',$.comment_text), // max 64
		comment_text: $ => /.*/
	}
});
